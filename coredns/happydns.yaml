kind: Deployment
apiVersion: apps/v1
metadata:
  name: happydns
  namespace: openshift-dns
  ownerReferences:
    - apiVersion: operator.openshift.io/v1
      kind: DNS
      name: default
      uid: 036eff39-a3b3-4676-af09-62d84af012bd
      controller: true
  labels:
    dns.operator.openshift.io/owning-dns: happydns
spec:
  replicas: 5
  selector:
    matchLabels:
      dns.operator.openshift.io/daemonset-dns: happydns
  template:
    metadata:
      creationTimestamp: null
      labels:
        dns.operator.openshift.io/daemonset-dns: happydns
    spec:
      nodeSelector:
        role: worker
      restartPolicy: Always
      serviceAccountName: dns
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 70Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: dns
          command:
            - coredns
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          ports:
            - name: dns
              containerPort: 5353
              protocol: UDP
            - name: dns-tcp
              containerPort: 5353
              protocol: TCP
            - name: metrics
              containerPort: 9153
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              readOnly: true
              mountPath: /etc/coredns
          terminationMessagePolicy: FallbackToLogsOnError
          image: >-
            quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:56a630ea3bf343be622bc6376dcad3f092260b1f5c76ea61fe310689f55409ae
          args:
            - '-conf'
            - /etc/coredns/Corefile
        - resources:
            requests:
              cpu: 10m
          terminationMessagePath: /dev/termination-log
          name: dns-node-resolver
          command:
            - /bin/bash
            - '-c'
            - |
              #!/bin/bash
              set -uo pipefail

              trap 'jobs -p | xargs kill || true; wait; exit 0' TERM

              OPENSHIFT_MARKER="openshift-generated-node-resolver"
              HOSTS_FILE="/etc/hosts"
              TEMP_FILE="/etc/hosts.tmp"

              IFS=', ' read -r -a services <<< "${SERVICES}"

              # Make a temporary file with the old hosts file's attributes.
              cp -f --attributes-only "${HOSTS_FILE}" "${TEMP_FILE}"

              while true; do
                declare -A svc_ips
                for svc in "${services[@]}"; do
                  # Fetch service IP from cluster dns if present. We make several tries
                  # to do it: IPv4, IPv6, IPv4 over TCP and IPv6 over TCP. The two last ones
                  # are for deployments with Kuryr on older OpenStack (OSP13) - those do not
                  # support UDP loadbalancers and require reaching DNS through TCP.
                  cmds=('dig -t A @"${NAMESERVER}" +short "${svc}.${CLUSTER_DOMAIN}"'
                        'dig -t AAAA @"${NAMESERVER}" +short "${svc}.${CLUSTER_DOMAIN}"'
                        'dig -t A +tcp @"${NAMESERVER}" +short "${svc}.${CLUSTER_DOMAIN}"'
                        'dig -t AAAA +tcp @"${NAMESERVER}" +short "${svc}.${CLUSTER_DOMAIN}"')
                  for i in ${!cmds[*]}
                  do
                    ips=($(eval "${cmds[i]}"))
                    if [[ "$?" -eq 0 && "${#ips[@]}" -ne 0 ]]; then
                      svc_ips["${svc}"]="${ips[@]}"
                      break
                    fi
                  done
                done

                # Update /etc/hosts only if we get valid service IPs
                # We will not update /etc/hosts when there is coredns service outage or api unavailability
                # Stale entries could exist in /etc/hosts if the service is deleted
                if [[ "${#svc_ips[@]}" -ne 0 ]]; then
                  # Build a new hosts file from /etc/hosts with our custom entries filtered out
                  grep -v "# ${OPENSHIFT_MARKER}" "${HOSTS_FILE}" > "${TEMP_FILE}"

                  # Append resolver entries for services
                  for svc in "${!svc_ips[@]}"; do
                    for ip in ${svc_ips[${svc}]}; do
                      echo "${ip} ${svc} ${svc}.${CLUSTER_DOMAIN} # ${OPENSHIFT_MARKER}" >> "${TEMP_FILE}"
                    done
                  done

                  # TODO: Update /etc/hosts atomically to avoid any inconsistent behavior
                  # Replace /etc/hosts with our modified version if needed
                  cmp "${TEMP_FILE}" "${HOSTS_FILE}" || cp -f "${TEMP_FILE}" "${HOSTS_FILE}"
                  # TEMP_FILE is not removed to avoid file create/delete and attributes copy churn
                fi
                sleep 60 & wait
                unset svc_ips
              done
          env:
            - name: SERVICES
              value: image-registry.openshift-image-registry.svc
            - name: NAMESERVER
              value: 172.30.0.10
            - name: CLUSTER_DOMAIN
              value: cluster.local
          securityContext:
            privileged: true
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: hosts-file
              mountPath: /etc/hosts
          terminationMessagePolicy: FallbackToLogsOnError
          image: >-
            quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c10249372eac034506388608252329141c6559cd22606f8f1f4f01b511e3b051
      serviceAccount: dns
      volumes:
        - name: config-volume
          configMap:
            name: dns-default
            items:
              - key: Corefile
                path: Corefile
            defaultMode: 420
        - name: hosts-file
          hostPath:
            path: /etc/hosts
            type: File
      dnsPolicy: Default
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
      priorityClassName: system-node-critical
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  revisionHistoryLimit: 10

